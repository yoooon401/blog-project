plugins {
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.app.blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	querydslVersion = '5.0.0'
	springCloudVersion = '2021.0.4'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation "com.querydsl:querydsl-apt:${querydslVersion}"
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
	implementation "com.querydsl:querydsl-sql:${querydslVersion}"
	annotationProcessor(
			"com.querydsl:querydsl-apt:${rootProject.ext.querydslVersion}:jpa",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok"
	)

	implementation 'commons-io:commons-io:2.6'
	implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	/** OpenFeign **/
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-httpclient'
	implementation 'io.github.openfeign:feign-core'

}

def querydslSrcDir = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
}

clean.doLast { file(querydslSrcDir).deleteDir() }

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

jar {
	manifest {
		attributes 'Main-Class': 'com.app.blog.project.SpringBootApplication'
	}
	from {
		configurations.runtimeClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
